type UpdateProductError = variant {
	EmptyTitle;
	ProductNotFound;
	UserNotAuthenticated;
};
type UpdateCategoryError = variant {
	CategoryNotFound;
	EmptyName;
	UserNotAuthenticated;
};
type Result_7 = variant {
	err : CreateCategoryError;
	ok;
};
type Result_6 = variant {
	err : CreateProductError;
	ok;
};
type Result_5 = variant {
	err : DeleteCategoryError;
	ok;
};
type Result_4 = variant {
	err : DeleteProductError;
	ok;
};
type Result_3 = variant {
	err : GetCategoryError;
	ok : Category;
};
type Result_2 = variant {
	err : GetProductError;
	ok : Product;
};
type Result_1 = variant {
	err : UpdateCategoryError;
	ok;
};
type Result = variant {
	err : UpdateProductError;
	ok;
};
type ProductId = nat;
type Product = record {
	category : CategoryId;
	id : ProductId;
	price : nat;
	title : text;
};
type GetProductError = variant { ProductNotFound };
type GetCategoryError = variant { CategoryNotFound };
type DeleteProductError = variant { UserNotAuthenticated };
type DeleteCategoryError = variant { UserNotAuthenticated };
type CreateProductError = variant {
	EmptyTitle;
	UserNotAuthenticated;
};
type CreateCategoryError = variant {
	CategoryAlreadyExists;
	EmptyName;
	UserNotAuthenticated;
};
type CategoryId = nat;
type Category = record {
	id : CategoryId;
	name : text;
	slug : text;
};
service : {
	create_category : (
		record {
			name : text;
			slug : text;
		}
	) -> (Result_7);
	create_product : (
		record {
			category : CategoryId;
			price : nat;
			title : text;
		}
	) -> (Result_6);
	delete_category : (CategoryId) -> (Result_5);
	delete_product : (ProductId) -> (Result_4);
	get_category : (CategoryId) -> (Result_3) query;
	get_product : (ProductId) -> (Result_2) query;
	greet : (text) -> (text);
	list_categories : () -> (
		vec record {
			CategoryId;
			Category;
		}
	) query;
	list_products : () -> (
		vec record {
			ProductId;
			Product;
		}
	) query;
	update_category : (
		CategoryId,
		record {
			name : text;
			slug : text;
		}
	) -> (Result_1);
	update_product : (
		ProductId,
		record {
			category : CategoryId;
			price : nat;
			title : text;
		}
	) -> (Result);
};
